% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_boundary_data.R
\name{get_boundary_data}
\alias{get_boundary_data}
\title{Retrieve Australian Bureau of Statistics (ABS) boundary data}
\usage{
get_boundary_data(
  ref_date,
  level = c("CED", "SA1", "MB", "POA"),
  type = c("allocation", "correspondence")
)
}
\arguments{
\item{ref_date}{Numeric. The reference year for the boundary data. Must be between 2011 and 2024, inclusive.}

\item{level}{Character. The geographic level of the boundary data. One of "CED" (Commonwealth Electoral Division),
"SA1" (Statistical Area Level 1), "MB" (Mesh Block), or "POA" (Postal Area). Defaults to "CED".}

\item{type}{Character. The type of boundary data. One of "allocation" or "correspondence". Defaults to "allocation".}
}
\value{
A data frame containing the boundary data for the specified parameters. If multiple files are downloaded,
they are combined into a single data frame, provided they have identical column structures.
}
\description{
Downloads and processes ABS boundary data (allocation or correspondence files)
for a specified reference year and geographic level from the scgElectionsAU package.
}
\details{
This function retrieves boundary data by accessing the \code{abs_boundary_index} dataset in the \code{scgElectionsAU} package,
filtering it based on the provided \code{ref_date}, \code{level}, and \code{type}. It then downloads the corresponding files from
the URLs listed in the index using \code{scgUtils::get_file()}. If multiple files are retrieved, they are combined into
a single data frame using \code{rbind}. The function includes validation checks to ensure the parameters are valid and
that the downloaded data can be combined.
}
\examples{
\dontrun{
# Retrieve 2021 CED allocation data
ced_data <- get_boundary_data(ref_date = 2021, level = "CED", type = "allocation")

# Retrieve 2016 SA1 correspondence data
sa1_data <- get_boundary_data(ref_date = 2016, level = "SA1", type = "correspondence")
}

}
