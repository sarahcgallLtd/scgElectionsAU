% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_ppv.R
\name{process_ppv}
\alias{process_ppv}
\title{Process Pre-Poll Voting Centre Data}
\usage{
process_ppv(data, event)
}
\arguments{
\item{data}{A data frame containing PPVC data for a single election event. Must include
an \code{event} column with a single unique value (e.g., "2010", "2013", "2016", "2019", "2022").
Additional required columns vary by year: \code{State}, \code{Division}, and date-specific vote columns
for 2010; \code{State}, \code{Division}, \code{m_pp_nm} for 2013; \code{m_state_ab}, \code{m_div_nm}, \code{m_pp_nm} for
2016 and 2019; \code{State}, \code{Division}, \code{PPVC}, \verb{Issue Date}, \verb{Total Votes} for 2022. A \code{date}
column is optional.}

\item{event}{A character string specifying the election year to process. Recognised values are
"2010", "2013", "2016", "2019", or "2022". Other values result in the data being returned
unprocessed.}
}
\value{
A data frame with standardised columns for recognised election years:
\itemize{
\item \code{date} (if present in the input)
\item \code{event} (the election year)
\item \code{StateAb} (state abbreviation)
\item \code{DivisionNm} (division name)
\item \code{PollingPlaceNm} (polling place name; included for 2013, 2016, 2019, and 2022 only)
\item \code{IssueDate} (date of vote issuance as a Date object)
\item \code{TotalVotes} (total votes issued on the corresponding issue date)
}
For 2010–2019, the data is pivoted from wide to long format using date-specific vote columns.
For 2022, the data retains its original structure with renamed columns. For unrecognised years,
the original data frame is returned unchanged.
}
\description{
Standardises and transforms Pre-Poll Voting Centre (PPVC) data
for a single Australian federal election event into a consistent long-format structure. This
function aligns column names across election years (2010, 2013, 2016, 2019, 2022), pivots date-specific
vote counts into a long format (except for 2022), and converts issue dates to Date objects. For
unrecognised election years, the data is returned unprocessed with a message.
}
\details{
This function processes PPVC data by:
\enumerate{
\item Standardising column names across recognised election years using \code{rename_cols()}:
\itemize{
\item 2010: \code{Division} to \code{DivisionNm}.
\item 2013: ``Division\code{to}DivisionNm`, `m_pp_nm` to `PollingPlaceNm`.
\item 2016 and 2019: `m_state_ab` to `StateAb`, `m_div_nm` to `DivisionNm`, `m_pp_nm` to `PollingPlaceNm`.
\item 2022: `Division` to `DivisionNm`, `PPVC` to `PollingPlaceNm`,
`Issue Date` to `IssueDate`, `Total Votes` to `TotalVotes`.
}
\item For 2010: Filtering out rows with NA in `DivisionNm` (e.g., notes or totals).
\item For 2010–2019: Pivoting date-specific vote columns into long format with `pivot_event()`,
creating `IssueDate` and `TotalVotes` columns.
\item For 2022: Selecting standardised columns without pivoting.
\item Converting `IssueDate` to a Date object using year-specific formats:
\itemize{
\item 2022: "\%d/\%m/\%y" (e.g., "09/05/22")
\item 2019: "\%d/\%m/\%Y" (e.g., "29/04/2019")
\item 2016: "\%Y-\%m-\%d" (e.g., "2016-06-14")
\item 2013: "\%d/\%m/\%Y" (e.g., "20/08/2013")
\item 2010: "\%d \%b \%y" (e.g., "02 Aug 10")
}
\item For unrecognised years: Returning the data unprocessed with an informative message.
}
The function assumes the input data frame contains the required columns for the specified `event`
year and that the `event` column has a single unique value matching the `event` argument.
}
\examples{
# Sample 2013 data (wide format)
data_2013 <- data.frame(
  date = 2013-09-07,
  event = "2013",
  StateAb = "New South Wales",
  DivisionNm = "Sydney",
  m_pp_nm = "Sydney PPVC",
  `20/08/2013` = 100,
  `21/08/2013` = 150,
  check.names = FALSE
)
process_ppv(data_2013, "2013")

# Sample 2022 data (long format)
data_2022 <- data.frame(
  date = 2022-05-21,
  event = "2022",
  StateAb = "Victoria",
  DivisionNm = "Melbourne",
  PPVC = "Melbourne PPVC",
  `Issue Date` = "09/05/22",
  `Total Votes` = 200,
  check.names = FALSE
)
process_ppv(data_2022, "2022")

# Sample invalid year
data_2025 <- data.frame(event = "2025", StateAb = "Queensland", Votes = 100)
process_ppv(data_2025, "2025")

}
